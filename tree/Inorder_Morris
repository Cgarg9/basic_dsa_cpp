S.C = O(1)
T.C = O(N)

class Solution {
  
  private:
    
    // void solve(Node* root,vector<int>&ans){
        
    //     if(root == NULL){
    //         return;
    //     }
        
    //     solve(root->left,ans);
    //     ans.push_back(root->data);
    //     solve(root->right,ans);
    // }
    void MorrisInorder(Node*root,vector<int>&ans){
        
        if( root == NULL ){
            return;
        }
        
        while( root ){
            
            if( root->left == NULL ){
                ans.push_back(root->data);
                root = root->right;
            }
            else{
                Node* pred = root->left;
                
                while( pred->right && pred->right != root ){
                    pred = pred->right;
                }
                
                if( pred->right == NULL ){
                    pred->right = root;
                    root = root->left;
                }
                else{
                    pred->right = NULL;
                    ans.push_back(root->data);
                    root = root->right;
                }
            }
        }
    }
  
  public:
    // Function to return a list containing the inorder traversal of the tree.
    vector<int> inOrder(Node* root) {
        vector<int>ans;
        MorrisInorder(root,ans);
        return ans;
    }
};
