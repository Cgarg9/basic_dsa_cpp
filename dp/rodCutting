
class Solution{
  private:
    int solve(int price[], int n, vector<int>& dp ){
        if( n <= 0 ){
            return 0;
        }
        if( dp[n] != -1 ){
            return dp[n];
        }
        for(int i = 0; i < n; i++ ){
            dp[n] = max(dp[n],price[i]+solve(price,n-1-i,dp));
        }
        return dp[n];
    }
  public:
    int cutRod(int price[], int n) {
        int ans = -1;
        vector<int> dp(n+1,-1);
        return solve(price,n,dp);
        // for( int i = 0; i < n; i++ ){
        //     ans = max(ans,prices[i]+cutRod(price,n-1-i));
        // }
    }
};
